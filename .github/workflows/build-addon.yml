name: Build Add-on

on:
  pull_request_review:
    types:
      - submitted
  push:
    branches:
      - release
    paths:
      - 'src/config.yaml'
      - 'src/Dockerfile'
      - 'src/rootfs/**'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build multi-arch add-on
    if: github.event_name == 'push' || github.event.review.state == 'approved'

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event_name == 'pull_request_review' && github.event.pull_request.head.ref || github.ref }}

      - name: Run Home Assistant add-on lint
        uses: frenck/action-addon-linter@v2.18.0
        with:
          path: ./src

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: ./src

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.2.0
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare tags
        id: tags
        run: |
          IMAGE_NAME="ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"
          
          if [ "${{ github.event_name }}" == "push" ]; then
            # For push to release, create versioned and latest tags
            echo "tags=${IMAGE_NAME}:${{ steps.info.outputs.version }},${IMAGE_NAME}:latest" >> $GITHUB_OUTPUT
          else
            # For CI builds (approved PR), just create a PR-specific tag
            echo "tags=${IMAGE_NAME}:pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@v6.9.0
        id: build
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.tags.outputs.tags }}
          context: ./src
          outputs: type=oci,dest=/tmp/image.tar
          provenance: false
          sbom: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            io.hass.name=${{ github.event.repository.name }}
            io.hass.version=${{ steps.info.outputs.version }}
            io.hass.description=${{ github.event.repository.description }}
            io.hass.url=https://github.com/${{ github.repository }}
            io.hass.type=addon
            io.hass.arch="amd64|aarch64|armhf"
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.version=${{ steps.info.outputs.version }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.authors=${{ github.repository_owner }} <github.com/${{ github.repository_owner }}>
            org.opencontainers.image.vendor=${{ github.repository_owner }} <github.com/${{ github.repository_owner }}>
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/blob/main/README.md
          annotations: |
            org.opencontainers.image.description=${{ github.event.repository.description }}

      - name: Upload image artifact
        if: github.event_name == 'pull_request_review'
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ github.event.repository.name }}-pr${{ github.event.pull_request.number }}.zip
          path: /tmp/image.tar
          compression-level: 0
